#!/bin/bash

myscriptDir="$( cd "$(dirname -- "$0")" ; pwd -P )"
cd $myscriptDir

#Stats script for Komodo Notary Nodes
#
#Requires jq v1.5+ and bitcoin-cli, komodo-cli, chips-cli and gamecredits-cli installed (e.g. symlinked to /usr/local/bin)

#==Options - Only Change These==

#Seconds in display loop, change to false if you don't want it to loop
sleepytime=false

#How many transactions back to scan for notarizations
txscanamount=777

#==End Options==

# Just to be sure printf doesn't reject with "invalid number" error because of decimal separator
LC_NUMERIC="en_US.UTF-8"

timeSince () {
    local currentimestamp=$(date +%s)
    local timecompare=$1

    if [ ! -z $timecompare ] && [[ $timecompare != "null" ]]
    then
        local t=$((currentimestamp-timecompare))

        local d=$((t/60/60/24))
        local h=$((t/60/60%24))
        local m=$((t/60%60))
        local s=$((t%60))

        if [[ $d > 0 ]]; then
            echo -n "${d}d"
        fi
        if [[ $h > 0 ]]; then
            echo -n "${h}h"
        fi
        if [[ $d = 0 && $m > 0 ]]; then
            echo -n "${m}m"
        fi
        if [[ $d = 0 && $h = 0 && $m = 0 ]]; then
            echo -n "${s}s"
        fi

    fi
}

#Do not change below for any reason!
#The BTC and KMD address here must remain the same. Do not need to enter yours!
utxoamt=0.00010000
ntrzdamt=-0.00083600
kmdntrzaddr=RXL3YXG2ceaB6C5hfJcN4fvmLH2C34knhA
timefilter2=1525513998

#format="%-13s %6s %6s %7s %12.4f %6s %6s %6s"

format="%-13s %12.4f %7s %7s %7s %7s %7s %7s %7s %7s %7s"

outputstats ()
{
    count=0
    totalntrzd=0
    now=$(date +"%H:%M")

    printf "\n\n"

    printf "%-13s %12s %7s %7s %7s %7s %7s %7s %7s %7s %7s\n" "-ASSET-" "-BALANCE-" "-TXN-" "-UTXO-" "-DUST-" "-NOTR-" "-BLOX-" "-PCT-" "-LAST-" "-CNCT-";

    kmddust= 
    kmdinfo=$(komodo-cli getinfo)
    kmdtxinfo=$(komodo-cli listtransactions "" $txscanamount)
    kmdlastntrztime=$(echo $kmdtxinfo | jq -r --arg address "$kmdntrzaddr" '[.[] | select(.address==$address)] | sort_by(.time) | last | "\(.time)"')
    printf "$format\n" "KMD" \
            "$(printf "%12.4f" $(echo $kmdinfo | jq .balance))" \
            "$(komodo-cli getwalletinfo | jq .txcount)" \
            "$(komodo-cli listunspent | jq --arg amt "$utxoamt" '[.[] | select(.amount==($amt|tonumber))] | length')" \
            "$(komodo-cli listunspent | jq --arg amt "$utxoamt" '[.[] | select(.amount<($amt|tonumber))] | length')" \
            " " \
            "$(echo $kmdinfo | jq .blocks)" \
	        " "\
            "$(timeSince $kmdlastntrztime)" \
            "$(echo $kmdinfo | jq .connections)" 

    ./listassetchains.py | while read coins; do    
        coin=($coins)

            info=$(komodo-cli -ac_name=${coin} getinfo)
            blocks=$(echo $info | jq .blocks)
            txinfo=$(komodo-cli -ac_name=${coin} listtransactions "" $txscanamount)
            lastntrztime=$(echo $txinfo | jq -r --arg address "$kmdntrzaddr" '[.[] | select(.address==$address)] | sort_by(.time) | last | "\(.time)"')
            acntrzd=$(echo $txinfo | jq --arg address "$kmdntrzaddr" --arg timefilter $timefilter2 '[.[] | select(.time>=($timefilter|tonumber) and .address==$address and .category=="send")] | length')
            totalntrzd=$(( $totalntrzd + $acntrzd ))
            pct=$(echo "${acntrzd}/${blocks}*100" | bc -l)
            printf "$format" "${coin[0]}" \
                   "$(printf "%12.4f" $(echo $info | jq .balance))" \
                   "$(komodo-cli -ac_name=${coin[0]} getwalletinfo | jq .txcount)" \
                   "$(komodo-cli -ac_name=${coin[0]} listunspent | jq --arg amt "$utxoamt" '[.[] | select(.amount==($amt|tonumber))] | length')" \
                   "$(komodo-cli -ac_name=${coin[0]} listunspent | jq --arg amt "$utxoamt" '[.[] | select(.amount<($amt|tonumber))] | length')" \
                   "$acntrzd" \
                   "$blocks" \
		           "$(printf "%2.1f" $(echo $pct))%" \
                   "$(timeSince $lastntrztime)" \
                   "$(echo $info | jq .connections)" 
	    echo ""
    done
}

outputstats
